server:
  port: 8810

jasypt:
  encryptor:
    password: lb

spring:
  datasource:
    url: jdbc:mysql://81.68.71.90:3306/foodie?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: ENC(Hsbp6faPbzqaoa076nZCGe3kakkBLDGh)
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    ########## 连接池 配置 ##########
    druid:
      # 配置初始化大小、最小、最大
      initial-size: 5
      min-idle: 10
      max-active: 20
      # 配置获取连接等待超时的时间(单位：毫秒)
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 2000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 600000
      max-evictable-idle-time-millis: 900000
      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql
      validationQuery: select 1
      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用
      testWhileIdle: true
      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的
      testOnBorrow: false
      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用
      testOnReturn: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle
      poolPreparedStatements: true
      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，
      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，
      # 可以把这个数值配置大一些，比如说100
      maxOpenPreparedStatements: 20
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作
      keepAlive: true
      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录
      aop-patterns: "com.liubin.foodie.admin.mapper.*"
      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########
      filters: stat,wall,log4j2
        # 自己配置监控统计拦截的filter
        filter:
          # 开启druiddatasource的状态监控
          stat:
            enabled: true
            db-type: mysql
            # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中
            log-slow-sql: true
            slow-sql-millis: 2000
          # 日志监控，使用slf4j 进行日志输出
          slf4j:
            enabled: true
            statement-log-error-enabled: true
            statement-create-after-log-enabled: false
            statement-close-after-log-enabled: false
            result-set-open-after-log-enabled: false
            result-set-close-after-log-enabled: false
        ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########
        web-stat-filter:
          enabled: true                   # 启动 StatFilter
          url-pattern: /*                 # 过滤所有url
          exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" # 排除一些不必要的url
          session-stat-enable: true       # 开启session统计功能
          session-stat-max-count: 1000    # session的最大个数,默认100
        ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########
        stat-view-servlet:
          enabled: true                   # 启用StatViewServlet
          url-pattern: /druid/*           # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html
          reset-enable: false              # 不允许清空统计数据,重新计算
          login-username: root            # 配置监控页面访问密码
          login-password: 123
          allow: 127.0.0.1           # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问
          deny:                                        # 拒绝访问的地址，deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝
  redis:
    host: 81.68.71.90 # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: ENC(F0ejDg76OJKk8XTPc5YRm6nTZENnHpAI) # Redis服务器连接密码（默认为空）
    timeout: 3000ms # 连接超时时间（毫秒）
  rabbitmq: #rabbitmq相关配置
    host: 81.68.71.90
    port: 5672
    username: liubin
    password: ENC(SSl62oJApYg9BwMDsE5dyA==)
  servlet:
    multipart:
      enabled: true #开启文件上传
      max-file-size: 10MB #限制文件上传大小为10M
mybatis:
  mapper-locations:
    - classpath:dao/*.xml
    - classpath*:com/**/mapper/*.xml
management: #开启SpringBoot Admin的监控
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
redis:
  database: mall
  key:
    admin: 'ums:admin'
  expire:
    common: 86400 # 24小时
aliyun:
  oss:
    endpoint: oss-cn-shenzhen.aliyuncs.com # oss对外服务的访问域名
    accessKeyId: test # 访问身份验证中用到用户标识
    accessKeySecret: test # 用户用于加密签名字符串和oss用来验证签名字符串的密钥
    bucketName: macro-oss # oss的存储空间
    policy:
      expire: 300 # 签名有效期(S)
    maxSize: 10 # 上传文件大小(M)
    callback: http://39.98.190.128:8080/aliyun/oss/callback # 文件上传成功后的回调地址
    dir:
      prefix: mall/images/ # 上传文件夹路径前缀
minio:
  endpoint: http://192.168.6.132:9090 #MinIO服务所在地址
  bucketName: mall #存储桶名称
  accessKey: minioadmin #访问的key
  secretKey: minioadmin #访问的秘钥

feign:
  okhttp:
    enabled: true
ribbon:
  ConnectTimeout: 3000 #服务请求连接超时时间（毫秒）
  ReadTimeout: 3000 #服务请求处理超时时间（毫秒）

foodie:
  jwt:
    # 密钥
    secret: abc123456
    # 过期时间
    expire: 5
    # 令牌缓存时间（天数）
    cache-expire: 10